[project]
name = "drugrag"
version = "1.0.0"
description = "Unified Drug Side Effect Retrieval System using RAG, GraphRAG, and LLM architectures"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "DrugRAG Team", email = "drugrag@example.com"}
]
keywords = [
    "drug-side-effects",
    "rag",
    "graphrag", 
    "llm",
    "medical-nlp",
    "retrieval-augmented-generation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    # Core ML/AI
    "openai>=1.0.0",
    "boto3>=1.28.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "accelerate>=0.25.0",
    # Graph Database
    "neo4j>=5.0.0",
    "networkx>=3.0",
    # Data Processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    # Utilities
    "python-dotenv>=1.0.0",
    "tqdm>=4.65.0",
    "requests>=2.31.0",
    # Logging & Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pinecone[grpc]>=7.3.0",
    "vllm>=0.10.2",
    "tenacity>=9.1.2",
    "tiktoken>=0.11.0",
    "sentence-transformers>=5.1.0",
]

[project.optional-dependencies]
dev = [
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

evaluation = [
    "scipy>=1.10.0",
    "plotly>=5.14.0",
]

[project.scripts]
drugrag = "main:main"
evaluate = "experiments.run_evaluation:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "ipython>=8.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # imported but unused
"tests/*" = ["S101"]       # use of assert

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]
